<!-- Warning : Do not edit this document manually -->
<?xml version="1.0" encoding="ISO-8859-1" ?>
<Project>
    <ProjectInfo>
        <Type>0</Type>
        <ID>{11f698e2-f5f7-40df-afbb-6bafdc1145e5}</ID>
        <Environment>1</Environment>
    </ProjectInfo>
    <ProductInfo>
        <Created>
            <Name>AmsPluginMaker 1.1</Name>
            <Version>1.1.0.0</Version>
            <Date>1/11/2020 4:43:52 PM</Date>
            <Type>Commercial Version</Type>
            <ID>{7a2e86e3-5079-44d5-8208-2aa1334ccc56}</ID>
            <MajorVersion>1</MajorVersion>
            <MinorVersion>1</MinorVersion>
        </Created>
        <Modified>
            <Name>AmsPluginMaker 1.1</Name>
            <Version>1.1.0.0</Version>
            <Date>1/11/2020 4:44:06 PM</Date>
            <Type>Commercial Version</Type>
            <ID>{7a2e86e3-5079-44d5-8208-2aa1334ccc56}</ID>
            <MajorVersion>1</MajorVersion>
            <MinorVersion>1</MinorVersion>
        </Modified>
    </ProductInfo>
    <Scripts>
        <Script Name="Lua" ScrollPosition="0" CursorPosition="26029">
            <Source></Source>
            <FoldLines />
            <BookMarks />
        </Script>
    </Scripts>
    <Modules />
    <Dependencies />
    <Resources />
    <Properties>
        <Property Name="PluginName">Frames</Property>
        <Property Name="HelpFileAuthoring">1</Property>
        <Property Name="PluginVersion">1.0.0.0</Property>
        <Property Name="AuthorInfo">Frames Plugin For AutoPlay Media Studio</Property>
    </Properties>
    <Intellisense />
</Project>
